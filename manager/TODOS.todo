IMPORTANT:

- DOCKERIZE APP
    - ADD ENV VARS WHEN DOCKERIZING APP
    - ENV VARS FOR: IP:PORTS OF DOCKER HOST, PRIVATE REGISTRY
- SET UID AS A LABEL WHEN CREATING CONTAINERS, SO IT IS EASIER TO RETRIEVE USER'S CONTAINERS FASTER.

TODO: IMAGES CAN BE LOADED FROM DOCKERFILE OR TAR ARCHIVE, AS WELL CAN BE SAVED TO A FILE(TAR ARCHIVE)
TODO: IMAGES CAN BE TAGGED
TODO: IMAGES CAN BE PRUNED
TODO: IMAGES CAN BE BUILD FROM DOCKER FILE
TODO: CONTAINERS CAN CREATE COMMITS TO MAKE IMAGES.
TODO: ADD ERROR HANDLING ON PYTHON AND JS, SHOW BETTER DESCRIPTIVE ERROR MESSAGES ON CLIENT SIDE.
TODO: EXECUTE COMMANDS ON CONTAINERS.
TODO: PRUNE CONTAINERS/VOLUMES/NETWORKS/IMAGES.
TODO: SORT DOCKERHUB RESULTS ON IMAGE SECTION.

TODO: IF YOU CAN, REPLACE THE WAY IMAGES/CONTAINERS LOAD, INSTEAD USE FLASK DIRECTIVES LIKE {% if containers %} {% for c in containers %} {% <tr><td>c.id</td></tr> %} {% endif %}

TODO: PLAN COMPOSE LIKE FEATURE, IDEAS:
    - SEND A REQUEST FROM CLIENT TO FLASK SERVER AND EXECUTE DIRECTLY ON TERMINAL DOCKER COMPOSE COMMAND
    - FIND A WAY OF EXCECUTING DOCKER COMPOSE COMMANDS WITHOUT ACCESSING THE TERMINAL DIRECTLY
    - SIMULATE DOCKER COMPOSE, USING THE COMPOSE FILES, READ AND EXECUTE CONTAINERS IN ORDER WITH THE ALREADY IMPLEMENTED CONTAINER
      MANAGEMENT SSYTEM FEATURES.


TODO: 
- ADD CONFIGURATIONS SECTION FOR:
    - USERNAME(CHANGE)
    - SET AN EMAIL(OPTIONAL, CONSIDER SENDING NOTIFICATIONS)
    - PRIVATE REPOSITORY CHANGE(FOR EACH CLIENT)

RELEVANT: 
- CHECK PRODUCTION DEPLOYMENT: https://flask.palletsprojects.com/en/1.1.x/tutorial/deploy/
- ADD CUSTOM ERROR PAGE(404)
