var currentFilter="all";function triggerContainerAction(e,t){sendRequest({type:"GET",url:`/containers/${t}/${e}`,isAsync:!0,params:null},null,e=>{let t=JSON.parse(e.srcElement.response);"error"in t?(showAlert("An error occurred triggering container action, check console logs.","danger"),console.log("error: ",t.error)):(refresh(),showAlert("Action executed successfully!","success"))},e=>{console.log("error: ",e),showAlert("An error occurred trying to make a request, check console for more info.","danger")})}function goToDetailsOf(e){localStorage.setItem("container",e.substr(1,e.length)),location.href="/containers/details"}function goToDetailsOfImage(e){localStorage.setItem("image",e),location.href="/images/details"}var modalContentType="information";function changeContainerModalBody(e){"information"==e?($("#containerInformation").text("Container Information"),$("#containerInformation")[0].classList.toggle("text-muted"),$("#commitContainer").text("Commit container >"),$("#commitContainer")[0].classList.toggle("text-muted")):($("#containerInformation").text("< Container Information"),$("#containerInformation")[0].classList.toggle("text-muted"),$("#commitContainer").text("Commit container"),$("#commitContainer")[0].classList.toggle("text-muted")),$("#mbContainerInfo")[0].classList.toggle("d-none"),$("#mbContainerCommit")[0].classList.toggle("d-none"),$("#mfContainerAction")[0].classList.toggle("d-none"),$("#mfContainerCommit")[0].classList.toggle("d-none"),modalContentType=e}function getContainerModalInfo(e){return`\n    <div id="mbContainerInfo">\n    <div class="row"><strong>ID: ${e.Id}</strong><p id="container-id"></p></div>\n    <div class="row"><strong>Name: ${e.Names}</strong><p id="container-name"></p></div>\n    <div class="row"><strong>IP/Ports: ${portsArrayToString(e.Ports)}</strong><p id="container-ipport"></p></div>\n    <div class="row"><strong>State: ${e.State}</strong><p id="container-state"></p></div>\n    <div class="row"><strong>Status: ${e.Status}</strong><p id="container-status"></p></div>\n    <div class="row"><strong>Image: ${e.Image}</strong><a href="#" id="container-image"></a></div>\n    <div class="row"><strong>Created: ${timeConverter(e.Created)}</strong><p id="container-created"></p></div>\n    </div>`}var containersIds,containers,commitConfs={};function getContainerCommitTemplate(e){let t='\n    <div id="mbContainerCommit" class="d-none">\n    <div><input id="tag" type="text" class="m-1 form-control" placeholder="Commit tag"></div>\n    <div><input id="repository" type="text" class="m-1 form-control" placeholder="Repository tag"></div>\n    <div><textarea id="message" class="m-1 form-control" placeholder="Message" rows="4" columns="50"></textarea></div>\n    <div><input id="author" type="text" class="m-1 form-control" placeholder="Default user name"></div>\n    <div><textarea id="changes" class="m-1 form-control" placeholder="Changes" rows="4" columns="50"></textarea></div>\n    <div>';return t+="</div></div>",'\n    <div id="mbContainerCommit" class="d-none">\n    <div><input id="tag" type="text" class="m-1 form-control" placeholder="Commit tag"></div>\n    <div><input id="repository" type="text" class="m-1 form-control" placeholder="Repository tag"></div>\n    <div><textarea id="message" class="m-1 form-control" placeholder="Message" rows="4" columns="50"></textarea></div>\n    <div><input id="author" type="text" class="m-1 form-control" placeholder="Default user name"></div>\n    <div><textarea id="changes" class="m-1 form-control" placeholder="Changes" rows="4" columns="50"></textarea></div>\n    <div></div></div>'}function commitContainer(e){let t={id:e,tag:$("#tag").val(),repository:$("#repository").val(),message:$("#message").val(),author:$("#author").val(),changes:$("#changes").val(),conf:commitConfs},n={type:"POST",url:"/containers/commit",isAsync:!0,params:JSON.stringify(t),requestHeaders:{"Content-Type":"application/json"}};sendRequest(n,null,e=>{let t=JSON.parse(e.srcElement.response);"error"in t?(showAlert("An error ocurred obtaining containers, check console logs.","danger"),console.log("error: ",t.error)):(showAlert("Container new image successfully commited!","success"),console.log("Commit Response: ",t))},e=>{console.log("error: ",e),showAlert("An error occurred trying to make a request, check console for more info.","danger")})}function showContainerModal(e){let t=e.State,n=e.Id,o='\n    <div class="mb-2 d-flex align-items-start justify-content-between">\n    <a id="containerInformation" href="#" class="text-muted" onclick="changeContainerModalBody(\'information\')">Container Information</a>\n    <a id="commitContainer" href="#" onclick="changeContainerModalBody(\'commit\')">Commit Container &gt;</a></div>\n    <div id="bodyContent" class="container-fluid bg-light">';o+=getContainerModalInfo(e),o+=getContainerCommitTemplate(n);let r=`\n        <div class="w-100 d-flex justify-content-between">\n        <div class="d-flex flex-column">\n        <a class="d-flex" href="#" onclick="goToDetailsOf('${e.Names[0]}')">Container details</a>\n        </div>`;r+=`\n        <div id="mfContainerCommit" class="d-none">\n        <button type="button" class="btn btn-secondary mx-1" data-dismiss="modal">Close</button>\n        <button onclick="commitContainer('${n}')" type="button" class="btn btn-primary mx-1" data-dismiss="modal">Commit</button>\n        </div>`,"exited"==t||"created"==t?r+=`\n        <div id="mfContainerAction" class="">\n        <button type="button" class="btn btn-secondary mx-1" data-dismiss="modal">Close</button>\n        <button onclick="triggerContainerAction('${n}','start')" type="button" class="btn btn-primary mx-1" data-dismiss="modal">Start</button>\n        </div>`:"paused"==t?r+=`\n        <div id="mfContainerAction" class="">\n        <button type="button" class="btn btn-secondary mx-1" data-dismiss="modal">Close</button>\n        <button onclick="triggerContainerAction('${n}','unpause')" type="button" class="btn btn-info mx-1" data-dismiss="modal">Unpause</button>\n        <button onclick="triggerContainerAction('${n}','stop')" type="button" class="btn btn-danger mx-1" data-dismiss="modal">Stop</button>\n        </div>`:"running"==t&&(r+=`\n        <div id="mfContainerAction" class="">\n        <button type="button" class="btn btn-secondary mx-1" data-dismiss="modal">Close</button>\n        <button onclick="triggerContainerAction('${n}','restart')" type="button" class="btn btn-warning mx-1" data-dismiss="modal">Restart</button>\n        <button onclick="triggerContainerAction('${n}','pause')" type="button" class="btn btn-info mx-1" data-dismiss="modal">Pause</button>\n        <button onclick="triggerContainerAction('${n}','stop')" type="button" class="btn btn-danger mx-1" data-dismiss="modal">Stop</button>\n        </div>`),r+="</div>",showModal("Container action",o,r)}function showContainerDetails(e){showContainerModal(containers.find(t=>t.Id==e)),$("#modal").ready(()=>{$("#modalFooter > #btnLaunchContainer").click(t=>{triggerContainerAction(e,"start")})})}function buildContainerTableRow(e,t){let n="",o=e.State,r="";if(e.Ports.length>0){let t=e.Ports[0];r=`${t.IP}:${t.PublicPort}->${t.PrivatePort}/${t.Type}`}return"running"==o?n="success":"paused"==o?n="info":"stopped"==o?n="danger":"restarting"==o&&(n="warning"),`<tr class="table-${n}">\n      <th scope="row">${t}</th>\n      <td scope="row"><span class="icon" onclick="showDeleteContainerModal('${e.Names[0]}')" data-feather="trash"></span></td>\n      <td>${e.Id}</td>\n      <td>${e.Names[0]}</td>\n      <td>${e.State}</td>\n      <td>${""==r?"NONE":r}</td>\n      <td><a href="#" id="${e.Id}" class="popover-item" onclick="goToDetailsOfImage('${e.Image}')" \n      data-placement="bottom" data-toggle="popover" title="Image Info" data-content="ID: \n      ${e.ImageID}">${e.Image}</a></td>\n      <td><a href="#" onclick="showContainerDetails('${e.Id}')">More</a></td>\n    </tr>`}function loadContainers(e,t){let n;if(clearContainersPanel(),0==e.length)return void(document.querySelector(".table-body").innerHTML+='\n        <tr><td colspan="10"><div class="d-flex justify-content-center">\n        No containers created,&nbsp;<a href="/containers/creation">Create one\n        </a>!</div></td></tr>');n="all"!=t?filterContainersBy(t):e;let o=1;n.forEach(e=>{rowsTemplate=buildContainerTableRow(e,o),document.querySelector(".table-body").innerHTML+=rowsTemplate,o++,feather.replace()})}function refresh(){sendRequest({type:"GET",url:"/containers/json",isAsync:!0,params:null},null,e=>{let t=JSON.parse(e.srcElement.response);"error"in t?showAlert("An error ocurred obtaining containers, check server logs.","danger"):(showAlert("Containers obtained successfully!, refreshing list!","success"),loadContainers(containers=t.containers,currentFilter),containersNames=containers.map(e=>{let t=e.Names[0];return t.substr(1,t.length)}),localStorage.setItem("containers_list",containersNames))},e=>{console.log("error: ",e),showAlert("An error occurred trying to make a request, check console for more info.","danger")})}function filterContainersBy(e){return filtered=[],filtered="all"==e?containers:"created/exited"==e?containers.filter(e=>"created"==e.State||"exited"==e.State):containers.filter(t=>t.State==e),filtered}function filterBy(e){clearContainersPanel(),currentFilter=e,$("#btnFilterBy").text(e),filteredContainers=filterContainersBy(e),loadContainers(filteredContainers,currentFilter)}function findContainersBy(e){return containers.filter(t=>t.Id.includes(e)||t.Names.toString().includes(e)||t.Image.includes(e)||t.ImageID.includes(e))}function searchContainers(){loadContainers(findContainersBy($("#searchText")[0].value),currentFilter)}function clearContainersPanel(){document.querySelector(".table-body").innerHTML=""}function deleteContainer(e){let t=$("#chkVolumes")[0].checked,n=$("#chkForce")[0].checked;sendRequest({type:"GET",url:`/containers/delete?container=${e}&volumes=${t}&force=${n}`,isAsync:!0,params:null},null,e=>{let t=JSON.parse(e.srcElement.response);"error"in t?(showAlert("An error ocurred deleting the container, check server logs.","danger"),console.log("error: ",t.error)):(showAlert("Container deleted successfully!","success"),refresh())},e=>{console.log("error: ",e),showAlert("An error occurred trying to make a request, check console for more info.","danger")})}function showDeleteContainerModal(e){let t=`<h5>Deleting: ${e}</h5>\n    <div class="form-check m-1">\n        <input type="checkbox" class="form-check-input" id="chkVolumes">\n        <label class="form-check-label ml-1" for="chkVolumes">Delete Associated Volumes</label>\n    </div>\n    \x3c!-- <div class="form-check">\n        <input type="checkbox" class="form-check-input" id="chkLink">\n        <label class="form-check-label mt-2 ml-2" for="chkLink">Delete Links</label>\n    </div> --\x3e\n    <div class="form-check m-1">\n        <input type="checkbox" class="form-check-input" id="chkForce">\n        <label class="form-check-label ml-1" for="chkForce">Force removal(SIGKILL)?</label>\n    </div>`,n=`\n        <button onclick="deleteContainer('${e.replace("/","")}')" class="btn btn-primary" data-dismiss="modal">Delete</button>\n         <button class="btn btn-secondary" data-dismiss="modal">Cancel</button>`;showModal("Delete container",t,n)}$(".site-content").ready(e=>{refresh()});
